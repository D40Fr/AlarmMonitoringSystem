// <auto-generated />
using System;
using AlarmMonitoringSystem.Infrastructure.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AlarmMonitoringSystem.Infrastructure.Migrations
{
    [DbContext(typeof(AlarmMonitoringDbContext))]
    partial class AlarmMonitoringDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("AlarmMonitoringSystem.Domain.Entities.Alarm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("AcknowledgedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("AcknowledgedBy")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("AlarmId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AlarmTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsAcknowledged")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("NumericValue")
                        .HasPrecision(18, 4)
                        .HasColumnType("TEXT");

                    b.Property<string>("RawData")
                        .HasColumnType("TEXT");

                    b.Property<int>("Severity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Unit")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Zone")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AlarmTime")
                        .HasDatabaseName("IX_Alarms_AlarmTime");

                    b.HasIndex("ClientId")
                        .HasDatabaseName("IX_Alarms_ClientId");

                    b.HasIndex("IsAcknowledged")
                        .HasDatabaseName("IX_Alarms_IsAcknowledged");

                    b.HasIndex("IsActive")
                        .HasDatabaseName("IX_Alarms_IsActive");

                    b.HasIndex("Severity")
                        .HasDatabaseName("IX_Alarms_Severity");

                    b.HasIndex("Type")
                        .HasDatabaseName("IX_Alarms_Type");

                    b.HasIndex("AlarmId", "ClientId")
                        .IsUnique()
                        .HasDatabaseName("IX_Alarms_AlarmId_ClientId_Unique");

                    b.HasIndex("IsActive", "IsAcknowledged")
                        .HasDatabaseName("IX_Alarms_IsActive_IsAcknowledged");

                    b.ToTable("Alarms", (string)null);
                });

            modelBuilder.Entity("AlarmMonitoringSystem.Domain.Entities.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("LastConnectedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastDisconnectedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("Port")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientId")
                        .IsUnique()
                        .HasDatabaseName("IX_Clients_ClientId");

                    b.HasIndex("IsActive")
                        .HasDatabaseName("IX_Clients_IsActive");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_Clients_Status");

                    b.HasIndex("IpAddress", "Port")
                        .HasDatabaseName("IX_Clients_IpAddress_Port");

                    b.ToTable("Clients", (string)null);
                });

            modelBuilder.Entity("AlarmMonitoringSystem.Domain.Entities.ConnectionLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Details")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(45)
                        .HasColumnType("TEXT");

                    b.Property<int>("LogLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("LogTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int?>("Port")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientId")
                        .HasDatabaseName("IX_ConnectionLogs_ClientId");

                    b.HasIndex("LogLevel")
                        .HasDatabaseName("IX_ConnectionLogs_LogLevel");

                    b.HasIndex("LogTime")
                        .HasDatabaseName("IX_ConnectionLogs_LogTime");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_ConnectionLogs_Status");

                    b.HasIndex("ClientId", "LogTime")
                        .HasDatabaseName("IX_ConnectionLogs_ClientId_LogTime");

                    b.ToTable("ConnectionLogs", (string)null);
                });

            modelBuilder.Entity("AlarmMonitoringSystem.Domain.Entities.Alarm", b =>
                {
                    b.HasOne("AlarmMonitoringSystem.Domain.Entities.Client", "Client")
                        .WithMany("Alarms")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("AlarmMonitoringSystem.Domain.Entities.ConnectionLog", b =>
                {
                    b.HasOne("AlarmMonitoringSystem.Domain.Entities.Client", "Client")
                        .WithMany("ConnectionLogs")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("AlarmMonitoringSystem.Domain.Entities.Client", b =>
                {
                    b.Navigation("Alarms");

                    b.Navigation("ConnectionLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
